"""Initial migration

Revision ID: dec919eeaf10
Revises: 
Create Date: 2025-06-18 23:30:42.620865

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dec919eeaf10"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "event",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("ssid", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("start_data", sa.Date(), nullable=False),
        sa.Column("end_data", sa.Date(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("location_name", sa.String(length=255), nullable=True),
        sa.Column(
            "latitude", sa.Numeric(precision=10, scale=8), nullable=True
        ),
        sa.Column(
            "longitude", sa.Numeric(precision=11, scale=8), nullable=True
        ),
        sa.Column("place_id", sa.String(length=255), nullable=True),
        sa.Column("image_url", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_event_ssid"), "event", ["ssid"], unique=False)
    op.create_table(
        "person",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("ssid", sa.String(length=50), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=50), nullable=False),
        sa.Column("search_name", sa.String(length=255), nullable=False),
        sa.Column("birth_date", sa.Date(), nullable=False),
        sa.Column("death_date", sa.Date(), nullable=True),
        sa.Column("born_country", sa.String(length=100), nullable=False),
        sa.Column("born_region", sa.String(length=100), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("portrait_url", sa.String(length=2048), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_person_search_name"), "person", ["search_name"], unique=False
    )
    op.create_index(op.f("ix_person_ssid"), "person", ["ssid"], unique=False)
    op.create_table(
        "tag",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("ssid", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tag_ssid"), "tag", ["ssid"], unique=False)
    op.create_table(
        "event_person",
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("person_id", sa.BigInteger(), nullable=False),
        sa.Column("role", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["person.id"],
        ),
        sa.PrimaryKeyConstraint("event_id", "person_id"),
    )
    op.create_table(
        "event_tag",
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("tag_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.PrimaryKeyConstraint("event_id", "tag_id"),
    )
    op.create_table(
        "person_tag",
        sa.Column("person_id", sa.BigInteger(), nullable=False),
        sa.Column("tag_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["person.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.PrimaryKeyConstraint("person_id", "tag_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("person_tag")
    op.drop_table("event_tag")
    op.drop_table("event_person")
    op.drop_index(op.f("ix_tag_ssid"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_person_ssid"), table_name="person")
    op.drop_index(op.f("ix_person_search_name"), table_name="person")
    op.drop_table("person")
    op.drop_index(op.f("ix_event_ssid"), table_name="event")
    op.drop_table("event")
    # ### end Alembic commands ###
